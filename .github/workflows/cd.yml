name: indy-node-cd

on: [push, workflow_dispatch]

jobs:
  setup-workflow:
    runs-on: ubuntu-latest
    outputs:
      CACHE_KEY_LINT: ${{ steps.init.outputs.CACHE_KEY_LINT }}
      CACHE_KEY_BUILD: ${{ steps.init.outputs.CACHE_KEY_BUILD }}
      # Expose the lowercase version of the GitHub repository name
      # to all subsequent jobs that reference image repositories
      # as the push and pull operations require the URL of the repository 
      # to be in lowercase.
      GITHUB_REPOSITORY_NAME: ${{ steps.init.outputs.GITHUB_REPOSITORY_NAME }}
      PACKAGE_NAME: ${{ steps.init.outputs.PACKAGE_NAME }}
      PACKAGE_VERSION: ${{ steps.init.outputs.PACKAGE_VERSION }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Set outputs
        id: init
        run: |
          echo "::set-output name=CACHE_KEY_LINT::${{ hashFiles('.github/workflows/lint/Dockerfile') }}"
          echo "::set-output name=CACHE_KEY_BUILD::${{ hashFiles('.github/workflows/build/Dockerfile') }}"
          echo "::set-output name=GITHUB_REPOSITORY_NAME::$(echo ${GITHUB_REPOSITORY,,})"
          echo "::set-output name=PACKAGE_VERSION::1.0.0"
          echo "::set-output name=PACKAGE_NAME::indy-node"

#   build-package:
#     needs: setup-workflow
#     runs-on: ubuntu-latest
#     env:
#       PACKAGE_NAME: ${{ needs.setup-workflow.outputs.PACKAGE_NAME }}
#       PACKAGE_VERSION: ${{ needs.setup-workflow.outputs.PACKAGE_VERSION }}
#     steps:
#       - name: Check out code
#         uses: actions/checkout@v2
#       - name: Build package
#         run: |
#           cd build-scripts/ubuntu-1604
#           # TODO: Cache the image, optimize scripts, remove default versions
#           ./build-indy-node-docker.sh "${PWD}/../.." 1.0.0 "${PWD}"
#            ls
#       - name: Archive package
#         uses: actions/upload-artifact@v2
#         with:
#            name: indy-node-build-cd
#            path: build-scripts/ubuntu-1604/indy-node_1.0.0_amd64.deb
          
#   publish-to-github:
#     needs: [setup-workflow, build-package]
#     runs-on: ubuntu-latest
#     env:
#        BRANCH_NAME: ${{ needs.setup-workflow.outputs.BRANCH_NAME }}
#        PACKAGE_NAME: ${{ needs.setup-workflow.outputs.PACKAGE_NAME }}
#        PACKAGE_VERSION: ${{ needs.setup-workflow.outputs.PACKAGE_VERSION }}
#     outputs:
#        PACKAGE_URL: ${{ steps.upload-release-asset.outputs.browser_download_url }}
#     steps:
#        - name: Restore package
#          uses: actions/download-artifact@v2
#          with:
#            name: indy-node-build-cd
#        - name: Create Release
#          id: create_release
#          uses: actions/create-release@v1
#          env:
#            GITHUB_TOKEN: ${{ secrets.CR_PAT }}
#          with:
#            # TODO: Better naming
#            tag_name: ${{ env.PACKAGE_VERSION }}-${{ github.run_number }}
#            release_name: ${{ env.PACKAGE_VERSION }}-${{ github.run_number }}
#            body: new version ${{ env.PACKAGE_VERSION }}-${{ github.run_number }} release
#            draft: false
#            prerelease: false
#        - name: Upload Release Asset
#          id: upload-release-asset
#          uses: actions/upload-release-asset@v1
#          env:
#            GITHUB_TOKEN: ${{ secrets.CR_PAT }}
#          with:
#            upload_url: ${{ steps.create_release.outputs.upload_url }}
#            asset_path: ./${{ env.PACKAGE_NAME }}_${{ env.PACKAGE_VERSION }}_amd64.deb
#            asset_name: ${{ env.PACKAGE_NAME }}_${{ env.PACKAGE_VERSION }}_amd64.deb
#            asset_content_type: application/vnd.debian.binary-package

  run-system-tests:
    needs: [setup-workflow]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: ['test_ledger.py', 'TestViewChangeSuite.py', 'TestConsensusSuite.py', 'test_state_proof.py']
      fail-fast: false
    env:
      PACKAGE_NAME: ${{ needs.setup-workflow.outputs.PACKAGE_NAME }}
      PACKAGE_VERSION: ${{ needs.setup-workflow.outputs.PACKAGE_VERSION }}
#       PACKAGE_URL: ${{ needs.publish-to-github.outputs.PACKAGE_URL }}
      PACKAGE_URL: https://github.com/askolesov/sovrin/releases/download/1.0.0-386/sovrin_1.0.0_amd64.deb
      
      
      # Client image
#       LIBINDY_REPO_COMPONENT: master
#       LIBINDY_VERSION: 1.10.0~1171
      
      INDY_NODE_DEB_URL: https://github.com/askolesov/indy-node/releases/download/1.0.0-17/indy-node_1.0.0_amd64.deb
      INDY_NODE_REPO_COMPONENT: master
      LIBINDY_CRYPTO_VERSION: 0.4.5
      PYTHON3_LIBINDY_CRYPTO_VERSION: 0.4.5
      INDY_PLENUM_VERSION: 1.13.0~dev1021
      INDY_NODE_VERSION: 1.13.0~dev1210
      TOKEN_PLUGINS_INSTALL: yes
      SOVRIN_VERSION: 1.1.210
      SOVTOKEN_VERSION: 1.0.8~dev151
      SOVTOKENFEES_VERSION: 1.0.8~dev151
      LIBINDY_REPO_COMPONENT: master
      LIBINDY_VERSION: 1.13.0~1420
      LIBSOVTOKEN_INSTALL: yes
      LIBSOVTOKEN_VERSION: 1.0.2~92
    steps:
      - name: Check out test automation
        uses: actions/checkout@v2
        with:
          repository: askolesov/indy-test-automation
          ref: sovrin-cd
#       - name: Patch requirements
#         run: |          
#           sed -i 's/python3-indy.*/python3-indy==1.13.0-dev-1420/g' ./system/requirements.txt 
      - name: Prepare
        run: |          
          ./system/docker/prepare.sh indy-test-automation-network
      - name: Run
        run: |          
          bash -c " set -o pipefail; ./system/docker/run.sh \"system/indy-node-tests/${{ matrix.test }}\" \" --payments -l -vv --junit-xml=system_tests_9_report.master.xml --gatherlogs --logsdir=_build/logs\" 2>&1 | tee system_tests_9_report.master.txt; "
#       - name: Archive package
#         uses: actions/upload-artifact@v2
#         with:
#           name: test-report
#           path: system_tests_9_report.master.txt
